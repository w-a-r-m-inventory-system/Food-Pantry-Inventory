Info on the requirements for beginners:

Alabaster - Alabaster is a visually (c)lean, responsive, configurable theme for the Sphinx documentation system. It is Python 2+3 compatible. It began as a third-party theme, and is still maintained separately, but as of Sphinx 1.3, Alabaster is an install-time dependency of Sphinx and is selected as the default theme.
https://alabaster.readthedocs.io/

Babel -  is a toolchain that is mainly used to convert ECMAScript 2015+ code into a backwards compatible version of JavaScript in current and older browsers or environments. Here are the main things Babel can do for you:
•	Transform syntax
•	Polyfill features that are missing in your target environment (through @babel/polyfill)
•	Source code transformations (codemods)
https://babeljs.io/docs/en/

certifi - Certifi is a carefully curated collection of Root Certificates for validating the trustworthiness of SSL certificates while verifying the identity of TLS hosts. It has been extracted from the Requestsproject.
The internet is an untrusted place. Every HTTP request you make should have verification on by default. This happens every time you access a website with your web browser, without any knowledge to the user — there’s no reason your code should be any different.
https://certifiio.readthedocs.io/en/latest/

chardet - The Universal Character Encoding Detector      
Detects
•	ASCII, UTF-8, UTF-16 (2 variants), UTF-32 (4 variants)
•	Big5, GB2312, EUC-TW, HZ-GB-2312, ISO-2022-CN (Traditional and Simplified Chinese)
•	EUC-JP, SHIFT_JIS, CP932, ISO-2022-JP (Japanese)
•	EUC-KR, ISO-2022-KR (Korean)
•	KOI8-R, MacCyrillic, IBM855, IBM866, ISO-8859-5, windows-1251 (Cyrillic)
•	ISO-8859-5, windows-1251 (Bulgarian)
•	ISO-8859-1, windows-1252 (Western European languages)
•	ISO-8859-7, windows-1253 (Greek)
•	ISO-8859-8, windows-1255 (Visual and Logical Hebrew)
•	TIS-620 (Thai)
https://pypi.org/project/chardet/

Docutils - is an open-source text processing system for processing plaintext documentation into useful formats, such as HTML, LaTeX, man-pages, open-document or XML. It includes reStructuredText, the easy to read, easy to use, what-you-see-is-what-you-get plaintext markup language.
http://docutils.sourceforge.net/

idna - Support for the Internationalised Domain Names in Applications (IDNA) protocol as specified in RFC 5891. This is the latest version of the protocol and is sometimes referred to as “IDNA 2008”.
This library also provides support for Unicode Technical Standard 46, Unicode IDNA Compatibility Processing.
This acts as a suitable replacement for the “encodings.idna” module that comes with the Python standard library, but only supports the old, deprecated IDNA specification (RFC 3490).
https://pypi.org/project/idna/

imagesize – 
It parses image files’ header and return image size.
•	PNG
•	JPEG
•	JPEG2000
•	GIF
•	TIFF (experimental)
This is a pure Python library.
https://pypi.org/project/imagesize/


Jinja2  - is a full featured template engine for Python. It has full unicode support, an optional integrated sandboxed execution environment, widely used and BSD licensed.
http://jinja.pocoo.org/

MarkupSafe - MarkupSafe implements a text object that escapes characters so it is safe to use in HTML and XML. Characters that have special meanings are replaced so that they display as the actual characters. This mitigates injection attacks, meaning untrusted user input can safely be displayed on a page.
https://pypi.org/project/MarkupSafe/

Packaging - ? Is this a python library? Can’t find it on google (easily)

Pygments - It is a generic syntax highlighter suitable for use in code hosting, forums, wikis or other applications that need to prettify source code. Highlights are:
•	a wide range of over 300 languages and other text formats is supported
•	special attention is paid to details that increase highlighting quality
•	support for new languages and formats are added easily; most languages use a simple regex-based lexing mechanism
•	a number of output formats is available, among them HTML, RTF, LaTeX and ANSI sequences
•	it is usable as a command-line tool and as a library
•	... and it highlights even Perl 6!
http://pygments.org/

pyparsing - a recursive descent parser framework for the Python programming language.
http://infohost.nmt.edu/~shipman/soft/pyparsing/web/index.html

pytz - brings the Olson tz database into Python. This library allows accurate and cross platform timezone calculations using Python 2.4 or higher. It also solves the issue of ambiguous times at the end of daylight saving time, which you can read more about in the Python Library Reference (datetime.tzinfo).
Almost all of the Olson timezones are supported.
http://pytz.sourceforge.net/

requests - Requests is the only Non-GMO HTTP library for Python, safe for human consumption. Requests allows you to send organic, grass-fed HTTP/1.1 requests, without the need for manual labor. There’s no need to manually add query strings to your URLs, or to form-encode your POST data. Keep-alive and HTTP connection pooling are 100% automatic, thanks to urllib3.
http://docs.python-requests.org/en/master/

Six  - is a Python 2 and 3 compatibility library. It provides utility functions for smoothing over the differences between the Python versions with the goal of writing Python code that is compatible on both Python versions. See the documentation for more information on what is provided.
Six supports every Python version since 2.6. It is contained in only one Python file, so it can be easily copied into your project. (The copyright and license notice must be retained.)
Online documentation is at https://six.readthedocs.io/.
Bugs can be reported to https://github.com/benjaminp/six. The code can also be found there.
For questions about six or porting in general, email the python-porting mailing list: https://mail.python.org/mailman/listinfo/python-porting
https://pypi.org/project/six/

snowballstemmer - It includes following language algorithms:
•	Danish
•	Dutch
•	English (Standard, Porter)
•	Finnish
•	French
•	German
•	Hungarian
•	Italian
•	Norwegian
•	Portuguese
•	Romanian
•	Russian
•	Spanish
•	Swedish
•	Turkish
This is a pure Python stemming library. If PyStemmer is available, this module uses it to accelerate.
https://pypi.org/project/snowballstemmer/

Sphinx - Sphinx is a tool that makes it easy to create intelligent and beautiful documentation, written by Georg Brandl and licensed under the BSD license.
It was originally created for the Python documentation, and it has excellent facilities for the documentation of software projects in a range of languages. Of course, this site is also created from reStructuredText sources using Sphinx! The following features should be highlighted:
•	Output formats: HTML (including Windows HTML Help), LaTeX (for printable PDF versions), ePub, Texinfo, manual pages, plain text
•	Extensive cross-references: semantic markup and automatic links for functions, classes, citations, glossary terms and similar pieces of information
•	Hierarchical structure: easy definition of a document tree, with automatic links to siblings, parents and children
•	Automatic indices: general index as well as a language-specific module indices
•	Code handling: automatic highlighting using the Pygments highlighter
•	Extensions: automatic testing of code snippets, inclusion of docstrings from Python modules (API docs), and more
•	Contributed extensions: more than 50 extensions contributed by users in a second repository; most of them installable from PyPI
Sphinx uses reStructuredText as its markup language, and many of its strengths come from the power and straightforwardness of reStructuredText and its parsing and translating suite, the Docutils.
http://www.sphinx-doc.org/en/master/

sphinxcontrib-plantuml - Once you enable this extension,
# Add any Sphinx extension module names here, as strings. They can be extensions
# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = ['sphinxcontrib.plantuml']
https://pypi.org/project/sphinxcontrib-plantuml/

sphinxcontrib-websupport - sphinxcontrib-websupport provides a Python API to easily integrate Sphinx documentation into your Web application.
https://pypi.org/project/sphinxcontrib-websupport/

urllib3 - urllib3 is a powerful, sanity-friendly HTTP client for Python. Much of the Python ecosystem already uses urllib3 and you should too. urllib3 brings many critical features that are missing from the Python standard libraries:
•	Thread safety.
•	Connection pooling.
•	Client-side SSL/TLS verification.
•	File uploads with multipart encoding.
•	Helpers for retrying requests and dealing with HTTP redirects.
•	Support for gzip and deflate encoding.
•	Proxy support for HTTP and SOCKS.
•	100% test coverage.
https://urllib3.readthedocs.io/en/latest/

Random other things to know – 
Restructured text (rst) - reStructuredText is an easy-to-read, what-you-see-is-what-you-get plaintext markup syntax and parser system. It is useful for in-line program documentation (such as Python docstrings), for quickly creating simple web pages, and for standalone documents. reStructuredText is designed for extensibility for specific application domains. The reStructuredText parser is a component of Docutils. reStructuredText is a revision and reinterpretation of the StructuredText and Setext lightweight markup systems.
The primary goal of reStructuredText is to define and implement a markup syntax for use in Python docstrings and other documentation domains, that is readable and simple, yet powerful enough for non-trivial use. The intended purpose of the markup is the conversion of reStructuredText documents into useful structured data formats.
See statemachine.py for an example of a Python module fully documented using reStructuredText.






