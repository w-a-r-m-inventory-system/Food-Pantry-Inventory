# Generated by Django 2.1.7 on 2019-04-10 05:18

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('fpiweb', '0008_auto_20190406_1737'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='activity',
            options={'ordering': ['-date_consumed', 'box_number']},
        ),
        migrations.AlterField(
            model_name='activity',
            name='box_number',
            field=models.CharField(help_text='Box number on box at time of consumption.', max_length=8, unique=True, verbose_name='Visible Box Number'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='box_type_code',
            field=models.CharField(help_text='Box type holding consumed product.', max_length=10, verbose_name='Box Type Code'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='date_consumed',
            field=models.DateField(help_text='Date product was consumed.', verbose_name='Date Box Emptied'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='date_filled',
            field=models.DateField(help_text='Approximate date product was put in the box.', verbose_name='Date Box Filled'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='duration',
            field=models.IntegerField(help_text='Number of days between date box was filled and consumed.', verbose_name='Duration'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='expiration_month_end',
            field=models.IntegerField(blank=True, help_text='Optional ending month product would have expired.', null=True, verbose_name='End Expiration Month'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='expiration_month_start',
            field=models.IntegerField(blank=True, help_text='Year product would have expired.', null=True, verbose_name='Start Expiration Month'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='expiration_year',
            field=models.IntegerField(help_text='Year product would have expired.', verbose_name='Year Expired'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='id',
            field=models.AutoField(help_text='Internal record identifier for an activity.', primary_key=True, serialize=False, verbose_name='Internal Activity ID'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='loc_bin',
            field=models.CharField(help_text='Bin box was in at the time product was consumed.', max_length=2, verbose_name='Bin Location'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='loc_row',
            field=models.CharField(help_text='Rox box was in at the time product was consumed.', max_length=2, verbose_name='Row Location'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='loc_tier',
            field=models.CharField(help_text='Tier box was in at the time product was consumed.', max_length=2, verbose_name='Tier Location'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='prod_cat_name',
            field=models.CharField(help_text='Category of product consumed.', max_length=30, verbose_name='Product Category Name'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='prod_name',
            field=models.CharField(help_text='Product contained in box at time of consumption.', max_length=30, verbose_name='Product Name'),
        ),
        migrations.AlterField(
            model_name='activity',
            name='quantity',
            field=models.IntegerField(help_text='Approximate number of items in the box when it was filled.', null=True, verbose_name='Quantity in Box'),
        ),
        migrations.AlterField(
            model_name='box',
            name='box_number',
            field=models.CharField(help_text='Number printed in the label on the box.', max_length=8, unique=True, verbose_name='Visible Box Number'),
        ),
        migrations.AlterField(
            model_name='box',
            name='box_type',
            field=models.ForeignKey(help_text='Type of box with this number.', on_delete=django.db.models.deletion.PROTECT, to='fpiweb.BoxType', verbose_name='Type of Box'),
        ),
        migrations.AlterField(
            model_name='box',
            name='date_filled',
            field=models.DateTimeField(blank=True, help_text='Approximate date box was filled, if filled.', null=True, verbose_name='Date Box Filled'),
        ),
        migrations.AlterField(
            model_name='box',
            name='exp_month_end',
            field=models.IntegerField(blank=True, help_text='Optional emding month range of when the product expires, if filled.', null=True, verbose_name='Expiration End Month (Optional)'),
        ),
        migrations.AlterField(
            model_name='box',
            name='exp_month_start',
            field=models.IntegerField(blank=True, help_text='Optional starting month range of when the product expires, if filled.', null=True, verbose_name='Expiration Start Month (Optional)'),
        ),
        migrations.AlterField(
            model_name='box',
            name='exp_year',
            field=models.IntegerField(blank=True, help_text='Year the product expires, if filled.', null=True, verbose_name='Year Product Expires'),
        ),
        migrations.AlterField(
            model_name='box',
            name='id',
            field=models.AutoField(help_text='Internal record identifier for box.', primary_key=True, serialize=False, verbose_name='Internal Box ID'),
        ),
        migrations.AlterField(
            model_name='box',
            name='loc_bin',
            field=models.CharField(blank=True, help_text='Bin containing this box, if filled.', max_length=2, null=True, verbose_name='Bin Location'),
        ),
        migrations.AlterField(
            model_name='box',
            name='loc_row',
            field=models.CharField(blank=True, help_text='Row containing this box, if filled.', max_length=2, null=True, verbose_name='Row Location'),
        ),
        migrations.AlterField(
            model_name='box',
            name='loc_tier',
            field=models.CharField(blank=True, help_text='Tier containing this box, if filled.', max_length=2, null=True, verbose_name='Tier Location'),
        ),
        migrations.AlterField(
            model_name='box',
            name='product',
            field=models.ForeignKey(blank=True, help_text='Product contained in this box, if filled.', null=True, on_delete=django.db.models.deletion.PROTECT, to='fpiweb.Product', verbose_name='product'),
        ),
        migrations.AlterField(
            model_name='box',
            name='quantity',
            field=models.IntegerField(blank=True, help_text='Approximate or default number of items in the box, if filled.', null=True, verbose_name='Quantity in Box'),
        ),
        migrations.AlterField(
            model_name='boxtype',
            name='box_type_code',
            field=models.CharField(help_text='Type of box (code or shorthand).', max_length=10, unique=True, verbose_name='Box Type Code'),
        ),
        migrations.AlterField(
            model_name='boxtype',
            name='box_type_descr',
            field=models.CharField(help_text='Type of box (description).', max_length=30, verbose_name='Box Type Description'),
        ),
        migrations.AlterField(
            model_name='boxtype',
            name='box_type_qty',
            field=models.IntegerField(help_text='Number of items (usually cans) that can typically fix in this box.', verbose_name='Default Box Type Quantity'),
        ),
        migrations.AlterField(
            model_name='boxtype',
            name='id',
            field=models.AutoField(help_text='Internal record identifier for box type.', primary_key=True, serialize=False, verbose_name='Internal Box Type ID'),
        ),
        migrations.AlterField(
            model_name='constraints',
            name='constraint_descr',
            field=models.TextField(help_text='Description of a constraint.', null=True, verbose_name='Constraint Description'),
        ),
        migrations.AlterField(
            model_name='constraints',
            name='constraint_list',
            field=models.CharField(blank=True, help_text='If a list, what are the valid values?', max_length=500, null=True, verbose_name='Valid Constraint List'),
        ),
        migrations.AlterField(
            model_name='constraints',
            name='constraint_max',
            field=models.CharField(blank=True, help_text='If a range, what is the maximum valid value?', max_length=30, null=True, verbose_name='Maximum Valid Constraint'),
        ),
        migrations.AlterField(
            model_name='constraints',
            name='constraint_min',
            field=models.CharField(blank=True, help_text='If a range, what is the minimum valid value?', max_length=30, null=True, verbose_name='Minimum Valid Constraint'),
        ),
        migrations.AlterField(
            model_name='constraints',
            name='constraint_name',
            field=models.CharField(help_text='Coded name of a constraint.', max_length=30, verbose_name='Constraint Name'),
        ),
        migrations.AlterField(
            model_name='constraints',
            name='constraint_type',
            field=models.CharField(choices=[('Int-MM', 'Integer Min/Max'), ('Char-MM', 'Character Min/Max'), ('Int-List', 'Integer Valid List'), ('Char-List', 'Character Valid List')], help_text='Type of constraint (integer or character, list or range).', max_length=15, verbose_name='Constraint Type'),
        ),
        migrations.AlterField(
            model_name='constraints',
            name='id',
            field=models.AutoField(help_text='Internal record identifier for a constraint.', primary_key=True, serialize=False, verbose_name='Internal Constraint ID'),
        ),
        migrations.AlterField(
            model_name='product',
            name='id',
            field=models.AutoField(help_text='Internal record identifier for product.', primary_key=True, serialize=False, verbose_name='Internal Product ID'),
        ),
        migrations.AlterField(
            model_name='product',
            name='prod_cat',
            field=models.ForeignKey(help_text='Product category associated with this product.', on_delete=django.db.models.deletion.PROTECT, to='fpiweb.ProductCategory', verbose_name='Product Category'),
        ),
        migrations.AlterField(
            model_name='product',
            name='prod_name',
            field=models.CharField(help_text='Name of this product.', max_length=30, verbose_name='product Name'),
        ),
        migrations.AlterField(
            model_name='productcategory',
            name='id',
            field=models.AutoField(help_text='Internal record identifier for product category.', primary_key=True, serialize=False, verbose_name='Internal Product Category ID'),
        ),
        migrations.AlterField(
            model_name='productcategory',
            name='prod_cat_descr',
            field=models.TextField(help_text='Description of this product category.', null=True, verbose_name='Product Category Description'),
        ),
        migrations.AlterField(
            model_name='productcategory',
            name='prod_cat_name',
            field=models.CharField(help_text='Name of this product category.', max_length=30, unique=True, verbose_name='Product Category Name'),
        ),
    ]
